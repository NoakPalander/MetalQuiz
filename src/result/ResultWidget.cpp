/**
 * @file ResultWidget.cpp
 * @author Noak Palander <noak.palander@protonmail.com>
 * @version 1.0
 * 
 * @section LICENSE
 * 
 * Copyright 2020 Noak Palander
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, 
 *  and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, 
 *  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @section DESCRIPTION
 * 
 * The result widget source file implements the result widget class defined in ResultWidget.hpp. The class' visual config is
 *  auto generated by Qt and is stored in ui_ResultWindow.h, it's generated with the style defined in the qml file ResultWidget.ui.
 * 
 * @see ui_ResultWidget.h
 * @see ResultWidget.ui
 * @see ResultWidget.hpp
 */

#include "ResultWidget.hpp"         // ResultWidget
#include "ui_ResultWidget.h"        // Ui::ResultWidget
#include "score/ScoreWidget.hpp"    // ScoreWidget
#include "page/PageWidget.hpp"      // PageWidget
#include "../Style.hpp"             // Style::LoadWidgetStyle
#include <QVBoxLayout>              // VBoxLayout

/**
 * Constructor that constructs the result-widget and sets it's children
 * 
 * @param quiz, the QuizWidget object that were active before the result
 * @param parent The parent QWidget-object of the class, default initialized to nullptr
 */
ResultWidget::ResultWidget(QuizWidget const& quiz, QWidget* parent) 
    :   QWidget(parent),
        m_UI(std::make_unique<Ui::ResultWidget>()),
        m_Quiz(quiz)
{
    // Sets up the widget and resizes the parent window
    m_UI->setupUi(this);
    parent->resize(this->width(), this->height());
    Style::LoadWidgetStyle(*this, "../resources/styles.qss");
    
    // Sets up the vertical layout and it's main widget
    QWidget* centralWidget = new QWidget;
    QVBoxLayout* layout = new QVBoxLayout(centralWidget);

    m_UI->scrollArea->setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOn);    // Always enable vertical bar
    m_UI->scrollArea->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff); // Always disables horizontal bar
    m_UI->scrollArea->setWidget(centralWidget);                             // Sets the scroll areas main widget
    m_UI->scrollArea->setWidgetResizable(true);                             // Makes sure the scroll widget is auto resizable
    
    // Adds a new score widget and n amounts of page widgets, where n is equal to the number of questions
    layout->addWidget(new ScoreWidget(quiz.GetScore(), quiz.GetLength(), centralWidget));
    for (std::size_t i = 0; i < m_Quiz.GetLength(); i++) {
        auto[question, ans, entered] = m_Quiz.GetResults(i);
        layout->addWidget(new PageWidget(i, question, ans, entered, centralWidget));
    }
}

/**
 * Destructor that destroys the result widget
 */
ResultWidget::~ResultWidget() {}