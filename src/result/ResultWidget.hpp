/**
 * @file ResultWidget.hpp
 * @author Noak Palander noak.palander@protonmail.com
 * @version 1.0
 * 
 * @section LICENSE
 * 
 * Copyright 2020 Noak Palander
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), 
 *  to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 *  and/or sell copies of the Software, 
 *  and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, 
 *  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @section DESCRIPTION
 * 
 * The ResultWidget declares the ResultWidget class and sets up its child widgets. It's visual config is auto generated
 *  and defined in ui_ResultWidget.h and ResultWidget.ui. The implementation of ResultWidget.hpp is in ResultWidget.cpp.
 * 
 * @see ui_ResultWidget.h
 * @see ResultWidget.ui
 * @see ResultWidget.cpp
 */

#pragma once                        // Include guard

#include "../quiz/QuizWidget.hpp"   // QuizWidget
#include <QWidget>                  // QWidget
#include <memory>                   // std::unique_ptr

// Forward declares Ui::ResultWidget which is auto generated by Qt
namespace Ui {
    class ResultWidget;
}

/**
 * @class ResultWidget
 * @brief Implements the result widget and that sets up the child widgets.
 * @extends QWidget
 * 
 * ResultWidget is also the end point of the program and is defined in ResultWidget.cpp.
 * 
 * @see ResultWidget.ui
 * @see ui_ResultWidget.h
 * @see ResultWidget.cpp
 */
class ResultWidget : public QWidget {
public:
    /**
     * Constructor that constructs the result widget and sets it's children.
     * 
     * @param quiz The QuizWidget object that were active before the result
     * @param parent The parent QWidget-object of the class, default initialized to nullptr
     */
    explicit ResultWidget(QuizWidget const& quiz, QWidget* parent = nullptr);
    
    /**
     * Destructor that destroys the result widget
     */
    ~ResultWidget();

private:
    Q_OBJECT
    std::unique_ptr<Ui::ResultWidget> m_UI; /**< contains the object of the widget gui */
    QuizWidget const& m_Quiz;               /**< contains a reference to the quiz */
};